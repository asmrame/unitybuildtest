name: Build

on: [push, pull_request]

env:
  GAME_NAME: UnityBuildTest
  AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'auto'

jobs:
  build:
    name: Build Unity Project
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        targetPlatform:
          - WebGL
          - StandaloneWindows
          - StandaloneLinux64
          - StandaloneOSX
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ env.GAME_NAME }}

      # Output
      - name: Upload to GitHub Pages
        if: ${{ matrix.targetPlatform == 'WebGL' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/WebGL/${{ env.GAME_NAME }}
          target-folder: ${{ github.sha }}
      
      - name: Upload to Cloudflare R2
        run: zip -r - * | aws s3 cp - s3://unitybuiltest/${{ env.GAME_NAME }}-${{ matrix.targetPlatform }}-${{ github.sha }}.zip
        working-directory: build/${{ env.GAME_NAME }}
        
      - name: Upload to Cloudflare R2 (WebGL)
        run: zip -r - * | aws s3 cp - s3://unitybuiltest/${{ env.GAME_NAME }}-${{ matrix.targetPlatform }}-${{ github.sha }}.zip
        working-directory: build/WebGL/${{ env.GAME_NAME }}